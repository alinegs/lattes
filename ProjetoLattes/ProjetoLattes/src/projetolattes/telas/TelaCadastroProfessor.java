/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaCadastroProfessor.java
 *
 * Created on Oct 25, 2011, 8:05:16 PM
 */

package projetolattes.telas;


import java.util.ArrayList;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import projetolattes.bd.CurriculoLattesBD;
import projetolattes.bd.ProfessorBD;
import projetolattes.bd.Transacao;
import projetolattes.beans.Banca;
import projetolattes.beans.CurriculoLattes;
import projetolattes.beans.Orientacao;
import projetolattes.beans.Producao;
import projetolattes.beans.Professor;
import projetolattes.extracaoHTML.ExtracaoLattes;
import projetolattes.util.Main;


/**
 * Frame interno da Tela de Cadastrar Professor
 * @author Thatiany Lima e Aline Gonçalves
 */
public class TelaCadastroProfessor extends javax.swing.JInternalFrame {

    private static Logger log = Logger.getLogger(TelaCadastroProfessor.class.getName());

    private CurriculoLattes c = new CurriculoLattes();
    private Professor p = new Professor();

    /** 
     * Creates new form TelaCadastroProfessor
     */
    public TelaCadastroProfessor() {
        initComponents();

        //Altera o ícone do frame interno da Tela de Cadastro
        try{
            Icon icon = new ImageIcon("src/projetolattes/imagens/professor.png");
            setFrameIcon(icon);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e, Main.recursos.getString("txt.erro.lattes"),0);
        }

        painelCurriculo.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulacao = new javax.swing.ButtonGroup();
        sexo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txt_nomeProfessor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_linkCurriculo = new javax.swing.JTextField();
        buscarCurriculo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnSalvarDados = new javax.swing.JButton();
        btnCancelarCadastro = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        txt_matriculaProfessor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        painelCurriculo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_TCPA = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tb_Graduacao = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tb_BancaJulgadora = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tb_BancasExaminadoras = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        sexoMasculino = new javax.swing.JRadioButton();
        sexoFeminino = new javax.swing.JRadioButton();
        txt_nome = new javax.swing.JTextField();
        txt_link = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        tb_LivroCapitulos = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        tb_Artigos = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tb_Especializacao = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tb_Doutorado = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tb_Mestrado = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        sexoMasculino1 = new javax.swing.JRadioButton();
        sexoFeminino1 = new javax.swing.JRadioButton();
        jLabel25 = new javax.swing.JLabel();

        setClosable(true);
        setForeground(java.awt.Color.white);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de Professores");
        setAutoscrolls(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText(Main.recursos.getString("txtNome.tela.cadastro"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText(Main.recursos.getString("txtLink.tela.cadastro"));

        buscarCurriculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetolattes/imagens/lattes.png"))); // NOI18N
        buscarCurriculo.setText(Main.recursos.getString("btnBuscar.tela.cadastro"));
        buscarCurriculo.setToolTipText("Buscar dados/informações do currículo do professor");
        buscarCurriculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarCurriculoActionPerformed(evt);
            }
        });

        btnSalvarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetolattes/imagens/Ok.png"))); // NOI18N
        btnSalvarDados.setText(Main.recursos.getString("btnSalvar.tela.cadastro"));
        btnSalvarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarDadosActionPerformed(evt);
            }
        });

        btnCancelarCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetolattes/imagens/Cancel.png"))); // NOI18N
        btnCancelarCadastro.setText(Main.recursos.getString("btnCancelar.tela.cadastro"));
        btnCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCadastroActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText(Main.recursos.getString("txtMatricula.tela.cadastro"));

        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("*");

        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("*");

        jLabel7.setForeground(new java.awt.Color(204, 0, 0));
        jLabel7.setText("*");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetolattes/imagens/lattes.png"))); // NOI18N
        jLabel5.setText(Main.recursos.getString("txtCurriculo.tela.cadastro"));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel8.setText(Main.recursos.getString("txtDados.tela.cadastro"));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setText(Main.recursos.getString("txtProducoes.tela.cadastro"));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText(Main.recursos.getString("txtTCPA.tela.cadastro"));

        tb_TCPA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição"
            }
        ));
        jScrollPane2.setViewportView(tb_TCPA);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel12.setText(Main.recursos.getString("txtLC.tela.cadastro"));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel13.setText(Main.recursos.getString("txtArtigos.tela.cadastro"));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText(Main.recursos.getString("txtOrientacoes.tela.cadastro"));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel14.setText(Main.recursos.getString("txtEspec.tela.cadastro"));

        tb_Graduacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição", "Status"
            }
        ));
        jScrollPane5.setViewportView(tb_Graduacao);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel15.setText(Main.recursos.getString("txtGrad.tela.cadastro"));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel16.setText(Main.recursos.getString("txtDout.tela.cadastro"));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel17.setText(Main.recursos.getString("txtMest.tela.cadastro"));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel18.setText(Main.recursos.getString("txtBanca.tela.cadastro"));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel19.setText(Main.recursos.getString("txtBJ.tela.cadastro"));

        tb_BancaJulgadora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição"
            }
        ));
        jScrollPane9.setViewportView(tb_BancaJulgadora);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel20.setText(Main.recursos.getString("txtBE.tela.cadastro"));

        tb_BancasExaminadoras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição", "Tipo de Banca Examinadora"
            }
        ));
        jScrollPane10.setViewportView(tb_BancasExaminadoras);

        jLabel21.setText(Main.recursos.getString("txtNome.tela.cadastro"));

        jLabel22.setText(Main.recursos.getString("txtSexo.tela.cadastro"));

        jLabel23.setText(Main.recursos.getString("txtLink.tela.cadastro"));

        sexo.add(sexoMasculino);
        sexoMasculino.setText(Main.recursos.getString("txtMasculino.tela.cadastro"));

        sexo.add(sexoFeminino);
        sexoFeminino.setText(Main.recursos.getString("txtFeminino.tela.cadastro"));

        tb_LivroCapitulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição"
            }
        ));
        jScrollPane11.setViewportView(tb_LivroCapitulos);

        tb_Artigos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição"
            }
        ));
        jScrollPane12.setViewportView(tb_Artigos);

        tb_Especializacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição", "Status"
            }
        ));
        jScrollPane6.setViewportView(tb_Especializacao);

        tb_Doutorado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição", "Status"
            }
        ));
        jScrollPane7.setViewportView(tb_Doutorado);

        tb_Mestrado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Ano", "Descrição", "Status"
            }
        ));
        jScrollPane8.setViewportView(tb_Mestrado);

        javax.swing.GroupLayout painelCurriculoLayout = new javax.swing.GroupLayout(painelCurriculo);
        painelCurriculo.setLayout(painelCurriculoLayout);
        painelCurriculoLayout.setHorizontalGroup(
            painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCurriculoLayout.createSequentialGroup()
                .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelCurriculoLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_link))
                            .addGroup(painelCurriculoLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCurriculoLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sexoMasculino)
                                .addGap(2, 2, 2)
                                .addComponent(sexoFeminino))))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(jLabel5)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        painelCurriculoLayout.setVerticalGroup(
            painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCurriculoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txt_link, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sexoFeminino))
                    .addGroup(painelCurriculoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(painelCurriculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(sexoMasculino))))
                .addGap(42, 42, 42)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(painelCurriculo);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel24.setText(Main.recursos.getString("txtSexo.tela.cadastro"));

        sexo.add(sexoMasculino1);
        sexoMasculino1.setSelected(true);
        sexoMasculino1.setText(Main.recursos.getString("txtMasculino.tela.cadastro"));

        sexo.add(sexoFeminino1);
        sexoFeminino1.setText(Main.recursos.getString("txtFeminino.tela.cadastro"));

        jLabel25.setForeground(new java.awt.Color(204, 0, 0));
        jLabel25.setText("*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24))
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_matriculaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_linkCurriculo)
                        .addComponent(txt_nomeProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sexoMasculino1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sexoFeminino1)
                        .addGap(383, 383, 383)
                        .addComponent(buscarCurriculo)))
                .addContainerGap(205, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(494, 494, 494)
                .addComponent(btnSalvarDados)
                .addGap(27, 27, 27)
                .addComponent(btnCancelarCadastro)
                .addContainerGap(334, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_linkCurriculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_matriculaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscarCurriculo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sexoMasculino1)
                        .addComponent(jLabel24)
                        .addComponent(jLabel25)
                        .addComponent(sexoFeminino1)))
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarCadastro)
                    .addComponent(btnSalvarDados))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Trata o evento do botão consultar currículo lattes
     * @param evt o evento
     */
    private void buscarCurriculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarCurriculoActionPerformed

     //painel com o curriculo fica visível
     painelCurriculo.setVisible(true);

     try{
        
         log.info(Main.recursos.getString("log.busca.curriculo") + txt_link.getText());

         // Preenche o objeto professor
        p.setNome(txt_nomeProfessor.getText());
        p.setMatricula(txt_matriculaProfessor.getText());
        if(sexo.isSelected(sexoFeminino1.getModel()))
            p.setSexo("Feminino");
        else if(sexo.isSelected(sexoMasculino1.getModel()))
            p.setSexo("Masculino");


        txt_nome.setText(txt_nomeProfessor.getText());
        txt_link.setText(txt_linkCurriculo.getText());
        if(sexo.isSelected(sexoFeminino1.getModel()))
            sexoFeminino.setSelected(true);
        else if(sexo.isSelected(sexoMasculino1.getModel()))
            sexoMasculino.setSelected(true);

        
       // Definição do cabeçalho das tabelas
        String[] titulosColunas = {"ID", "Ano", "Descrição"};
        String[] titulosColunas1 = {"ID", "Ano", "Descrição", "Status"};
        String[] titulosColunas2 = {"ID", "Ano", "Descrição", "Tipo de Banca Examinadora"};

        //Passa o link do curriculo lattes do professor para a classe ExtraçãoLattes
        c = ExtracaoLattes.extrair(txt_linkCurriculo.getText());

        // Os dados já estão no objeto c
        // Pega as produções de trabalho e coloca num vetor
        Producao[] producoes = c.getProducoes();
        // Pega as bancas que o professor participou e coloca num vetor
        Banca[] bancas = c.getBancas();
        // Pega as orientações e coloca num vetor
        Orientacao[] orientacoes = c.getOrientacoes();


  //****************************************Produções*******************************************************//
        //ArrayLists dos tipos de produções
        ArrayList<Producao> trabalhos = new ArrayList<Producao>(),
                            livrosCapitulos = new ArrayList<Producao>(),
                            artigos = new ArrayList<Producao>();

        //laço pra separar as produções
        for(Producao prod : producoes){
            switch(prod.getTipoProducao().getIdTipoProducao()){//Compara o ID do tipo da produção com o ID definido na classe ExtracaoLattes
                case 0:
                    trabalhos.add(prod);
                    break;
                case 1:
                case 3:
                    livrosCapitulos.add(prod);
                    break;
                case 2:
                    artigos.add(prod);
                    break;
                default:
                    // Lança uma exceção aqui....
            }
        }//fim do laço para separar produões

        // Verifica se houve alguma produção de trabalho
        if(trabalhos.size() > 0){
            //numero de linhas definido pelo numero de trabalhos
            int linhas = trabalhos.size();
            //Vetor bidimensional para armazenar os trabalhos
            String[][] conteudoTrabalhos = new String[linhas][3];
            
            for(int i = 0; i < linhas; i++){
                Producao prod = trabalhos.get(i);
                conteudoTrabalhos[i][0] = Integer.toString(prod.getIdProducao()); // Coluna ID
                conteudoTrabalhos[i][1] = Integer.toString(prod.getAno()); // Coluna ano
                conteudoTrabalhos[i][2] = prod.getDescricao(); // coluna descrição
            }

            //insere os dados do vetor no modelo e na tabela
            tb_TCPA.setModel(new DefaultTableModel(conteudoTrabalhos, titulosColunas));
            //informa a tabela grafica com os novos valores
            tb_TCPA.repaint();
        }//fim do if de verificação de produção de trabalho

        // Verifica se houve alguma produção de livros e capítulos
        if(livrosCapitulos.size() > 0){
            int linhas = livrosCapitulos.size();

            String[][] conteudoLivrosCapitulos = new String[linhas][3];
            
            for(int i = 0; i < linhas; i++){
                Producao livrosCap = livrosCapitulos.get(i);
                conteudoLivrosCapitulos[i][0] = Integer.toString(livrosCap.getIdProducao()); // Coluna ID
                conteudoLivrosCapitulos[i][1] = Integer.toString(livrosCap.getAno()); // Coluna ano!
                conteudoLivrosCapitulos[i][2] = livrosCap.getDescricao(); // coluna descrição
            }

            //insere os dados do vetor no modelo e na tabela
            tb_LivroCapitulos.setModel(new DefaultTableModel(conteudoLivrosCapitulos, titulosColunas));
            //informa a tabela grafica com os novos valores
            tb_LivroCapitulos.repaint();
        }//fim do if de verificação de produção de livros e capítulos

        // Verifica se houve alguma produção de artigos
        if(artigos.size() > 0){
            int linhas = artigos.size();

            String[][] conteudoArtigos = new String[linhas][3];
            
            for(int i = 0; i < linhas; i++){
                Producao artigo = artigos.get(i);
                conteudoArtigos[i][0] = Integer.toString(artigo.getIdLattes()); //Coluna ID
                conteudoArtigos[i][1] = Integer.toString(artigo.getAno()); //Coluna ano!
                conteudoArtigos[i][2] = artigo.getDescricao(); //coluna descrição
            }

            //insere os dados do vetor no modelo e na tabela
            tb_Artigos.setModel(new DefaultTableModel(conteudoArtigos, titulosColunas));
            //informa a tabela grafica com os novos valores
            tb_Artigos.repaint();
        }//fim do if de verificação de produção de artigos



//*******************************************BANCAS*********************************************************//
        //ArrayLists dos tipos de bancas
        ArrayList<Banca> bancasJulgadoras = new ArrayList<Banca>(),
                         bancasExaminadoras = new ArrayList<Banca>();

        //laço pra separar as bancas
        for(Banca b : bancas){
            switch(b.getTipoBanca().getIdTipoBanca()){//Compara o ID do tipo da banca com o ID definido na classe ExtracaoLattes
                case 0:
                    bancasExaminadoras.add(b);
                    break;
                case 1:
                    bancasJulgadoras.add(b);
                default:
                    //Lança uma exceção
            }
        }//fim do laço para separar as bancas de acordo com seu tipo

        // Verifica se houve alguma banca Julgadora
        if(bancasJulgadoras.size() > 0){
            int linhas = bancasJulgadoras.size();

            String[][] conteudoBancasJulgadoras = new String[linhas][3];
            
            for(int i = 0; i < linhas; i++){
                Banca bancaJulg = bancasJulgadoras.get(i);
                conteudoBancasJulgadoras[i][0] = Integer.toString(bancaJulg.getIdBanca()); // Coluna ID
                conteudoBancasJulgadoras[i][1] = Integer.toString(bancaJulg.getAno()); // Coluna ano!
                conteudoBancasJulgadoras[i][2] = bancaJulg.getDescricao(); // coluna descrição
            }

            //insere os dados do vetor no modelo e na tabela
            tb_BancaJulgadora.setModel(new DefaultTableModel(conteudoBancasJulgadoras, titulosColunas));
            //informa a tabela grafica com os novos valores
            tb_BancaJulgadora.repaint();
        }//fim do if de verificação de bancas julgadoras

        // Verifica se houve alguma banca Examinadora
        if(bancasExaminadoras.size() > 0){
            int linhas = bancasExaminadoras.size();

            String[][] conteudoBancasExaminadoras = new String[linhas][4];
            
            for(int i = 0; i < linhas; i++){
                Banca bancaExam = bancasExaminadoras.get(i);
                conteudoBancasExaminadoras[i][0] = Integer.toString(bancaExam.getIdBanca()); // Coluna ID
                conteudoBancasExaminadoras[i][1] = Integer.toString(bancaExam.getAno()); // Coluna ano!
                conteudoBancasExaminadoras[i][2] = bancaExam.getDescricao(); // coluna descrição
                conteudoBancasExaminadoras[i][3] = bancaExam.getSubTipoBanca().getNome(); // coluna tipo de banca examinadora
            }

            //insere os dados do vetor no modelo e na tabela
            tb_BancasExaminadoras.setModel(new DefaultTableModel(conteudoBancasExaminadoras, titulosColunas2));
            //informa a tabela grafica com os novos valores
            tb_BancasExaminadoras.repaint();
        }//fim do if de verificação de bancas examinadoras


//*****************************************Orientações*******************************************************//
        //ArrayLists dos tipos de bancas
        ArrayList<Orientacao> orientacaoEspecializacao = new ArrayList<Orientacao>(),
                              orientacaoGraduacao = new ArrayList<Orientacao>(),
                              orientacaoDoutorado = new ArrayList<Orientacao>(),
                              orientacaoMestrado = new ArrayList<Orientacao>();

        //laço pra separar as orientações
        for(Orientacao o : orientacoes){
            switch(o.getTipoOrientacao().getIdTipoOrientaco()){//Compara o ID do tipo da orientação com o ID definido na classe ExtracaoLattes
                case 0:
                    orientacaoGraduacao.add(o);
                    break;
                case 1:
                    orientacaoEspecializacao.add(o);
                    break;
                case 2:
                    orientacaoMestrado.add(o);
                    break;
                case 3:
                    orientacaoDoutorado.add(o);
                    break;
                default:
                    // Lança uma exceção
            }
        }

        // Verifica se houve alguma orientação de Graduação(Trabalho de conclusão de curso de graduação)
        if(orientacaoGraduacao.size() > 0){
            int linhas = orientacaoGraduacao.size();

            String[][] conteudoOrientacaoGraduacao = new String[linhas][4];
            
            for(int i = 0; i < linhas; i++){
                Orientacao orientacaoGrad = orientacaoGraduacao.get(i);
                conteudoOrientacaoGraduacao[i][0] = Integer.toString(orientacaoGrad.getIdOrientacao()); // Coluna ID
                conteudoOrientacaoGraduacao[i][1] = Integer.toString(orientacaoGrad.getAno()); // Coluna ano!
                conteudoOrientacaoGraduacao[i][2] = orientacaoGrad.getDescricao();// coluna descrição
                conteudoOrientacaoGraduacao[i][3] = orientacaoGrad.getStatus() == 0 ? "Em andamento" : "Concluída";//coluna de status da orientação
            }

            //insere os dados do vetor no modelo e na tabela
            tb_Graduacao.setModel(new DefaultTableModel(conteudoOrientacaoGraduacao, titulosColunas1));
            //informa a tabela grafica com os novos valores
            tb_Graduacao.repaint();
        }//fim do if de verificação de orientações de Graduação

        // Verifica se houve alguma orientação de Especialização(Monografia de conclusão de curso de aperfeiçoamento/especialização)
        if(orientacaoEspecializacao.size() > 0){
            int linhas = orientacaoEspecializacao.size();

            String[][] conteudoOrientacaoEspecializacao = new String[linhas][4];
            
            for(int i = 0; i < linhas; i++){
                Orientacao orientacaoEsp = orientacaoEspecializacao.get(i);
                conteudoOrientacaoEspecializacao[i][0] = Integer.toString(orientacaoEsp.getIdOrientacao()); // Coluna ID
                conteudoOrientacaoEspecializacao[i][1] = Integer.toString(orientacaoEsp.getAno()); // Coluna ano
                conteudoOrientacaoEspecializacao[i][2] = orientacaoEsp.getDescricao();// coluna descrição
                conteudoOrientacaoEspecializacao[i][3] = orientacaoEsp.getStatus() == 0 ? "Em andamento" : "Concluída";//coluna de status da orientação
            }

            //insere os dados do vetor no modelo e na tabela
            tb_Especializacao.setModel(new DefaultTableModel(conteudoOrientacaoEspecializacao, titulosColunas1));
            //informa a tabela grafica com os novos valores
            tb_Especializacao.repaint();
        }//fim do if de verificação de orientações de Especialização

        // Verifica se houve alguma orientação de Doutorado(Tese de doutorado)
        if(orientacaoDoutorado.size() > 0){
            int linhas = orientacaoDoutorado.size();

            String[][] conteudoOrientacaoDoutorado = new String[linhas][4];
            
            for(int i = 0; i < linhas; i++){
                Orientacao orientacaoDout = orientacaoDoutorado.get(i);
                conteudoOrientacaoDoutorado[i][0] = Integer.toString(orientacaoDout.getIdOrientacao()); // Coluna ID
                conteudoOrientacaoDoutorado[i][1] = Integer.toString(orientacaoDout.getAno()); // Coluna ano
                conteudoOrientacaoDoutorado[i][2] = orientacaoDout.getDescricao();// coluna descrição
                conteudoOrientacaoDoutorado[i][3] = orientacaoDout.getStatus() == 0 ? "Em andamento" : "Concluída";//coluna de status da orientação
            }

            //insere os dados do vetor no modelo e na tabela
            tb_Doutorado.setModel(new DefaultTableModel(conteudoOrientacaoDoutorado, titulosColunas1));
            //informa a tabela grafica com os novos valores
            tb_Doutorado.repaint();
        }//fim do if de verificação de orientações de Doutorado

        if(orientacaoMestrado.size() > 0){
            int linhas = orientacaoMestrado.size();

            String[][] conteudoOrientacaoMestrado = new String[linhas][4];
            
            for(int i = 0; i < linhas; i++){
                Orientacao orientacaoMest = orientacaoMestrado.get(i);
                conteudoOrientacaoMestrado[i][0] = Integer.toString(orientacaoMest.getIdOrientacao()); // Coluna ID
                conteudoOrientacaoMestrado[i][1] = Integer.toString(orientacaoMest.getAno()); // Coluna ano
                conteudoOrientacaoMestrado[i][2] = orientacaoMest.getDescricao();// coluna descrição
                conteudoOrientacaoMestrado[i][3] = orientacaoMest.getStatus() == 0 ? "Em andamento" : "Concluída";//coluna de status da orientação
            }

            //insere os dados do vetor no modelo e na tabela
            tb_Mestrado.setModel(new DefaultTableModel(conteudoOrientacaoMestrado, titulosColunas1));
            //informa a tabela grafica com os novos valores
            tb_Mestrado.repaint();
        }
     }catch (Exception e) {
            JOptionPane.showMessageDialog(null,Main.recursos.getString("txt.erro2.lattes") + e.getMessage(), Main.recursos.getString("txt.erro2.principal")     ,   JOptionPane.INFORMATION_MESSAGE);

            log.info(Main.recursos.getString("log.consulta.curriculo"));

            //Limpa os campos
            txt_matriculaProfessor.setText("");
            txt_nomeProfessor.setText("");
            txt_nome.setText("");
            txt_link.setText("");
            sexoFeminino1.setSelected(false);
            sexoMasculino1.setSelected(false);
            sexoMasculino.setSelected(false);
            sexoFeminino.setSelected(false);
     }

    }//GEN-LAST:event_buscarCurriculoActionPerformed

    /**
     * Método para tratar envento do tipo ActionEvent. Tipo de evento gerado quanto se clica em um botão.
     * @param evt Evento que foi gerado pelo botão cancelar
     */
    private void btnCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCadastroActionPerformed
        log.info(Main.recursos.getString("log.cancelar.cadastro"));
        //Evento do botão cancelar, fecha a TelaCadastrarProfessor
        dispose();
    }//GEN-LAST:event_btnCancelarCadastroActionPerformed

     /**
     * Método para tratar envento do tipo ActionEvent. Tipo de evento gerado quanto se clica em um botão.
     * @param evt Evento que foi gerado pelo botão salvar
     */
    private void btnSalvarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarDadosActionPerformed
       try{
           Transacao.abrir();

           log.info(Main.recursos.getString("log.salva.dados"));
           // Salvando professor
           new ProfessorBD(p).salvar();

           // Salvando Curriculo lattes
           log.info(Main.recursos.getString("log.salva.curriculo"));
           c.setProfessor(p);
           new CurriculoLattesBD(c).salvar();
           
           Transacao.commit();

           log.info(Main.recursos.getString("log.cad.prof1") + p.getNome() + Main.recursos.getString("log.cad.prof2"));
           JOptionPane.showMessageDialog(null, Main.recursos.getString("msg.cadastro.finalizado"));
           dispose();
       }
       catch(Exception e){
           JOptionPane.showMessageDialog(null, Main.recursos.getString("txt.erro.cadastro")  + e.getMessage(), Main.recursos.getString("titulo.cadastro.banco") ,   JOptionPane.INFORMATION_MESSAGE);
           log.warning(Main.recursos.getString("log.erro.cadastro"));
           Transacao.rollback();
       }
    }//GEN-LAST:event_btnSalvarDadosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarCadastro;
    private javax.swing.JButton btnSalvarDados;
    private javax.swing.JButton buscarCurriculo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel painelCurriculo;
    private javax.swing.ButtonGroup sexo;
    private javax.swing.JRadioButton sexoFeminino;
    private javax.swing.JRadioButton sexoFeminino1;
    private javax.swing.JRadioButton sexoMasculino;
    private javax.swing.JRadioButton sexoMasculino1;
    private javax.swing.JTable tb_Artigos;
    private javax.swing.JTable tb_BancaJulgadora;
    private javax.swing.JTable tb_BancasExaminadoras;
    private javax.swing.JTable tb_Doutorado;
    private javax.swing.JTable tb_Especializacao;
    private javax.swing.JTable tb_Graduacao;
    private javax.swing.JTable tb_LivroCapitulos;
    private javax.swing.JTable tb_Mestrado;
    private javax.swing.JTable tb_TCPA;
    private javax.swing.ButtonGroup titulacao;
    private javax.swing.JTextField txt_link;
    private javax.swing.JTextField txt_linkCurriculo;
    private javax.swing.JTextField txt_matriculaProfessor;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txt_nomeProfessor;
    // End of variables declaration//GEN-END:variables

}
